read.csv("sustainability_scores")
read.csv("sustainability_scores.cvs")
my data <- read.csv("sustainability_scores.cvs")
my_data <- read.csv("sustainability_scores.cvs")
my_data <- read.csv("sustainability_scores.cvs")
my_data <- read.csv("D:\VITChennai\Sem3\R studio\Project\Sustainability\sustainability_scores.cvs")
my_data <- read.csv("sustainability_scores.csv")
read.csv("sustainability_scores.csv")
my_data <-read.csv("sustainability_scores.csv")
view(my_data)
View(my_data)
library(DT) # Displaying data tables
library(DT)
View(my_data)
fliter(country='US')
my_data <-read.csv("sustainability_scores.csv") %>%
View(my_data)
my_data <-read.csv("sustainability_scores.csv")
install.packages(c('flexdashboard',
'tidyverse',
'highcharter',
'gt',
'htmltools',
'viridis'))
install.packages(c('plotly',
'countrycode',
'crosstalk',
))
install.packages(c('plotly',
'countrycode',
'crosstalk'))
View(my_data)
View(my_data)
View(my_data)
View(my_data)
View(my_data)
View(my_data)
# Importing libraries
library(flexdashboard)# Dashboard package
library(highcharter) # Interactive data visualizations
library(plotly) # Interactive data visualizations
library(viridis) # Color gradients
library(tidyverse) # Metapackge
library(countrycode) # Converts country names/codes
library(crosstalk) # Provides interactivity for HTML widgets
library(gt)
library(htmltools)
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = average(Overall.ESG.SCORE)) %>%
arrange(desc(Overall.ESG.SCORE)) %>%
head(10) %>%
hchart('coloumn', hcaes(x=Country, y=Overall.ESG.SCORE, color=custom_colors)) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b>Avg ESG Score: </b> {point.y} <br>') %>%
hc_title(text= 'Avg ESG Score of top 10 Countries',
style = list(fontsize = '25px', fontweight='bold')) %>%
View(my_data)
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = sum (Overall.ESG.SCORE)) %>%
arrange(desc(Overall.ESG.SCORE)) %>%
head(10) %>%
hchart('coloumn', hcaes(x=Country, y=Overall.ESG.SCORE, color=custom_colors)) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b>Avg ESG Score: </b> {point.y} <br>') %>%
hc_title(text= 'Avg ESG Score of top 10 Countries',
style = list(fontsize = '25px', fontweight='bold')) %>%
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = average (Overall.ESG.SCORE)) %>%
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = average (Overall.ESG.SCORE))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = sum(Overall.ESG.SCORE))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = avg(Overall.ESG.SCORE))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = sum(Overall.ESG.SCORE))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE))
arrange(desc(Overall.ESG.SCORE)) %>%
head(10) %>%
hchart('coloumn', hcaes(x=Country, y=Overall.ESG.SCORE, color=custom_colors)) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b>Avg ESG Score: </b> {point.y} <br>') %>%
hc_title(text= 'Avg ESG Score of top 10 Countries',
style = list(fontsize = '25px', fontweight='bold'))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE))
arrange(desc(Overall.ESG.SCORE))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE))
arrange(desc(Overall.ESG.Score))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data
group_by(Country)
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE))
arrange(desc(Overall.ESG.Score))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE))
arrange(desc(Overall.ESG.Score)) %>%
head(10)
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE))
arrange(desc(Overall.ESG.SCORE)) %>%
head(10) %>%
hchart('coloumn', hcaes(x=Country, y=Overall.ESG.SCORE, color=custom_colors)) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b>Avg ESG Score: </b> {point.y} <br>') %>%
hc_title(text= 'Avg ESG Score of top 10 Countries',
style = list(fontsize = '25px', fontweight='bold')) %>%
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE)) %>%
arrange(desc(Overall.ESG.SCORE)) %>%
head(10) %>%
hchart('coloumn', hcaes(x=Country, y=Overall.ESG.SCORE, color=custom_colors)) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b>Avg ESG Score: </b> {point.y} <br>') %>%
hc_title(text= 'Avg ESG Score of top 10 Countries',
style = list(fontsize = '25px', fontweight='bold')) %>%
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE)) %>%
arrange(desc(Overall.ESG.SCORE))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE)) %>%
arrange(desc(Overall.ESG.SCORE))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE)) %>%
arrange(desc(Overall.ESG.SCORE)) %>%
head(10)
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE)) %>%
arrange(desc(Overall.ESG.SCORE)) %>%
head(10) %>%
hchart('coloumn', hcaes(x=Country, y=Overall.ESG.SCORE, color=custom_colors))
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE)) %>%
arrange(desc(Overall.ESG.SCORE)) %>%
head(10) %>%
hchart('coloumn', hcaes(x=Country, y=Overall.ESG.SCORE, color=custom_colors)) %>%
hc_add_theme(hc_theme_google())
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE)) %>%
arrange(desc(Overall.ESG.SCORE)) %>%
head(10) %>%
hchart('coloumn', hcaes(x=Country, y=Overall.ESG.SCORE, color=custom_colors)) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b>Avg ESG Score: </b> {point.y} <br>')
#Colours
custom_colors <- viridis::mako(n=10)
#Avg ESG rating my country
my_data %>%
group_by(Country) %>%
summarize(Overall.ESG.SCORE = mean(Overall.ESG.SCORE)) %>%
arrange(desc(Overall.ESG.SCORE)) %>%
head(10) %>%
hchart('coloumn', hcaes(x=Country, y=Overall.ESG.SCORE, color=custom_colors)) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b>Avg ESG Score: </b> {point.y} <br>') %>%
hc_title(text= 'Avg ESG Score of top 10 Countries',
style = list(fontsize = '25px', fontweight='bold'))
# Importing libraries
library(flexdashboard)# Dashboard package
library(highcharter) # Interactive data visualizations
library(plotly) # Interactive data visualizations
library(viridis) # Color gradients
library(tidyverse) # Metapackge
library(countrycode) # Converts country names/codes
library(crosstalk) # Provides interactivity for HTML widgets
library(gt)
library(htmltools)
#Importing data
my_data <-read.csv("sustainability_scores.csv", show_col_types=FALSE)
# Importing libraries
library(flexdashboard)# Dashboard package
library(highcharter) # Interactive data visualizations
library(plotly) # Interactive data visualizations
library(viridis) # Color gradients
library(tidyverse) # Metapackge
library(countrycode) # Converts country names/codes
library(crosstalk) # Provides interactivity for HTML widgets
library(gt)
library(htmltools)
#Importing data
my_data <-read.csv("sustainability_scores.csv", show_col_types=FALSE)
# Importing libraries
library(flexdashboard)# Dashboard package
library(highcharter) # Interactive data visualizations
library(plotly) # Interactive data visualizations
library(viridis) # Color gradients
library(tidyverse) # Metapackge
library(countrycode) # Converts country names/codes
library(crosstalk) # Provides interactivity for HTML widgets
library(gt)
library(htmltools)
#Importing data
my_data <-read.csv("sustainability_scores.csv", show_col_types=FALSE)
# Importing libraries
library(flexdashboard)# Dashboard package
library(highcharter) # Interactive data visualizations
library(plotly) # Interactive data visualizations
library(viridis) # Color gradients
library(tidyverse) # Metapackge
library(countrycode) # Converts country names/codes
library(crosstalk) # Provides interactivity for HTML widgets
library(gt)
library(htmltools)
#Importing data
my_data <-read.csv("sustainability_scores.csv", show_col_types=FALSE)
